cmake_minimum_required(VERSION 3.10)

project(hardware_instructions_demo VERSION 1.0)

set(CMAKE_C_COMPILER gcc)
set(CMAKE_CXX_COMPILER g++)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

set(buf_types "float" "double")
set(base_compile_options1 "-std=c++11" "-Wall" "-Werror" "-Wextra")
set(compile_versions1 O3_i386 O3_i686 O3_nehalem O3_broadwell O3_skylake O3_skylake-avx512)
set(compile_options1 "-O3 -march=i386 -m32" "-O3 -march=i686 -m32" "-O3 -march=nehalem" "-O3 -march=broadwell" "-O3 -march=skylake" "-O3 -march=skylake-avx512")
set(link_options1 "-m32" "-m32" "_" "_" "_" "_")
list(LENGTH compile_versions1 versions1_length)
math(EXPR versions1_len "${versions1_length} - 1")
list(LENGTH buf_types buf_types_length)
math(EXPR buf_types_len "${buf_types_length} - 1")

foreach(buf_idx RANGE ${buf_types_len})
list(GET buf_types ${buf_idx} buf_type)
foreach(idx RANGE ${versions1_len})
list(GET compile_versions1 ${idx} compile_version)
list(GET compile_options1 ${idx} compile_options)
list(GET link_options1 ${idx} link_options)
separate_arguments(compile_options)
add_executable(loop1_${compile_version}_${buf_type} loop1.cpp)
target_compile_options(loop1_${compile_version}_${buf_type} PRIVATE "-DBUF_TYPE=${buf_type}")
target_compile_options(loop1_${compile_version}_${buf_type} PRIVATE ${base_compile_options1})
target_compile_options(loop1_${compile_version}_${buf_type} PRIVATE ${compile_options})
if(NOT "${link_options}" STREQUAL "_")
set_target_properties(loop1_${compile_version}_${buf_type} PROPERTIES LINK_FLAGS ${link_options})
endif()
endforeach()
endforeach()
